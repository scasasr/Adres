// <auto-generated />
using System;
using Adres.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adres.Domain.Migrations
{
    [DbContext(typeof(AdresDbContext))]
    partial class AdresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Adres.Domain.Models.AdminUnit", b =>
                {
                    b.Property<int>("AdminUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdminUnitID");

                    b.ToTable("AdminUnits");
                });

            modelBuilder.Entity("Adres.Domain.Models.Adquisition", b =>
                {
                    b.Property<int>("AdquisitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdminUnitID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AdquisitionDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("AssetServiceTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Budget")
                        .HasColumnType("TEXT");

                    b.Property<string>("Documentation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProviderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("AdquisitionID");

                    b.HasIndex("AdminUnitID");

                    b.HasIndex("AssetServiceTypeID");

                    b.HasIndex("ProviderID");

                    b.ToTable("Adquisitions");
                });

            modelBuilder.Entity("Adres.Domain.Models.AdquisitionHistory", b =>
                {
                    b.Property<int>("AdquisitionHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdquisitionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("AdquisitionHistoryID");

                    b.HasIndex("AdquisitionID");

                    b.ToTable("AdquisitionHistories");
                });

            modelBuilder.Entity("Adres.Domain.Models.AssetServiceType", b =>
                {
                    b.Property<int>("AssetServiceTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AssetServiceTypeID");

                    b.ToTable("AssetServiceTypes");
                });

            modelBuilder.Entity("Adres.Domain.Models.Provider", b =>
                {
                    b.Property<int>("ProviderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProviderID");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Adres.Domain.Models.Adquisition", b =>
                {
                    b.HasOne("Adres.Domain.Models.AdminUnit", "AdminUnit")
                        .WithMany("Adquisitions")
                        .HasForeignKey("AdminUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adres.Domain.Models.AssetServiceType", "AssetServiceType")
                        .WithMany("Adquisitions")
                        .HasForeignKey("AssetServiceTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adres.Domain.Models.Provider", "Provider")
                        .WithMany("Adquisitions")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminUnit");

                    b.Navigation("AssetServiceType");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Adres.Domain.Models.AdquisitionHistory", b =>
                {
                    b.HasOne("Adres.Domain.Models.Adquisition", "Adquisition")
                        .WithMany("Histories")
                        .HasForeignKey("AdquisitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adquisition");
                });

            modelBuilder.Entity("Adres.Domain.Models.AdminUnit", b =>
                {
                    b.Navigation("Adquisitions");
                });

            modelBuilder.Entity("Adres.Domain.Models.Adquisition", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("Adres.Domain.Models.AssetServiceType", b =>
                {
                    b.Navigation("Adquisitions");
                });

            modelBuilder.Entity("Adres.Domain.Models.Provider", b =>
                {
                    b.Navigation("Adquisitions");
                });
#pragma warning restore 612, 618
        }
    }
}
